# Rust needs at least Visual Studio 2013 Appveyor OS for MSVC targets.
os: Visual Studio 2015

environment:
  global:
    project_name: anyshortcut-cli
  matrix:
  ### MSVC Toolchains ###
  # Stable 64-bit MSVC
  - CHANNEL: stable
    TARGET: x86_64-pc-windows-msvc
  # Stable 32-bit MSVC
  - CHANNEL: stable
    TARGET: i686-pc-windows-msvc

## Install Script ##

# This is the most important part of the Appveyor configuration. This installs the version of Rust
# specified by the 'CHANNEL' and 'TARGET' environment variables from the build matrix. This uses
# rustup to install Rust.
#
# For simple configurations, instead of using the build matrix, you can simply set the
# default-toolchain and default-host manually here.
install:
- appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
- rustup-init -yv --default-toolchain %CHANNEL% --default-host %TARGET%
- set PATH=%PATH%;%USERPROFILE%\.cargo\bin
- rustc -vV
- cargo -vV

## Build Script ##

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
build: false

# Uses 'cargo test' to run tests and build. Alternatively, the project may call compiled programs
#directly or perform other testing commands. Rust will automatically be placed in the PATH
# environment variable.
test_script:
- cargo test --target %TARGET% --verbose %cargoflags%

before_deploy:
# Generate artifacts for release
- cargo build --release
- mkdir staging
- copy target\release\anyshortcut-cli.exe staging
- ps: copy target\release\build\*\out\_as.ps1 staging
- cd staging
- 7z a ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip *
- appveyor PushArtifact ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip

deploy:
  # All the zipped artifacts will be deployed
  artifact: /.*\.zip/
  auth_token:
    secure: F3W/4UctpxkCH0t+L4aooTzm6ZlMCMAzCpD0KnOgzWZZvWMcOY3MTl8Sa4wcmUlM
  provider: GitHub
  # deploy when a new tag is pushed and only on the stable channel
  on:
    # channel to use to produce the release artifacts
    CHANNEL: stable
    appveyor_repo_tag: true

branches:
  only:
  - master
  # IMPORTANT Regex to match tags. Required, or appveyor may not trigger deploys when a new tag
  # is pushed. This regex matches semantic versions like v1.2.3-rc4+2016.02.22
  - /^v\d+\.\d+\.\d+.*$/